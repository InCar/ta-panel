import org.apache.tools.ant.taskdefs.condition.Os

buildscript{
    repositories {
        if (project.hasProperty('maven') && maven == 'maven.aliyun.com')
            maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        else
            mavenCentral()
    }
}

plugins{
    id 'org.springframework.boot' version '2.7.3'
    id 'java'
}

repositories {
    if (project.hasProperty('maven') && maven == 'maven.aliyun.com')
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
    else
        mavenCentral()
}

dependencies{
    implementation(project('ta-json-expr:java'))

    implementation(platform('org.springframework.boot:spring-boot-dependencies:2.7.3'))
    implementation('org.springframework.boot:spring-boot-starter-webflux:2.7.3'){
        exclude(module: "spring-boot-starter-logging")
    }

    implementation('org.slf4j:slf4j-api:1.7.36')
    implementation('org.apache.logging.log4j:log4j-core:2.18.0')
    runtimeOnly('org.apache.logging.log4j:log4j-slf4j-impl:2.18.0')

    implementation('org.mongodb:mongodb-driver-reactivestreams:4.8.2')

    testImplementation('org.junit.jupiter:junit-jupiter:5.8.2')
}

def markGitVer = tasks.register('markGitVer'){
    doLast{
        def git = "git -C " + projectDir + " "
        def branch = (git + "symbolic-ref --short HEAD").execute().text.trim()
        def rev = (git + "rev-list --count HEAD").execute().text.trim()
        def hash = (git + "rev-parse --short HEAD").execute().text.trim()
        def hash160 = (git + "rev-parse HEAD").execute().text.trim()
        println("\tMark Git Version: " + branch + "." + rev + "@" + hash)
        def tmBuilding = System.currentTimeMillis().toString()

        def packageName = "com.incarcloud.tensoranalyzor".replace('.', '/')
        def javaFile = new File(projectDir, "src/main/java/$packageName/GitVer.jav_").text
        javaFile = javaFile
                .replace("\$branch\$", branch)
                .replace("\$rev\$", rev)
                .replace("\$hash\$", hash)
                .replace("\$hash160\$", hash160)
                .replace("\$tmBuilding\$", tmBuilding)

        def writer = new PrintWriter(new File(projectDir, "src/main/java/$packageName/GitVer.java"))
        writer.print(javaFile)
        writer.close()
    }
}

def yarnBuild = tasks.register('yarnBuild', Exec){
    workingDir("$rootDir/src/main/resources/static")
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine("cmd.exe", "/C", "yarn build")
    }
    else{
        commandLine("yarn", "build")
    }
}

processResources{
    dependsOn yarnBuild
    exclude('static')
}

compileJava{
    dependsOn markGitVer
    options.encoding = 'utf-8'
    options.compilerArgs << '-Xlint:unchecked'
}

compileTestJava{
    options.encoding = 'utf-8'
    options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation' << '-Xdiags:verbose'
}

bootRun{
    systemProperties(System.getProperties())
}

test{
    useJUnitPlatform()

    testLogging {
        events 'passed', 'skipped', 'failed'
        showStandardStreams = true
    }
}

defaultTasks 'assemble'